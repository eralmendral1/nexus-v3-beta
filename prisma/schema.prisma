generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Client {
    id             Int              @id
    masterClient   Int?
    name           String
    email          String?
    disabled       Boolean          @default(false)
    address1       String?
    address2       String?
    city           String?
    state          String?
    zip            String?
    phone1         String?
    phone2         String?
    fax            String?
    createdAt      DateTime         @default(now())
    updatedAt      DateTime         @default(now())
    PolicyCategory PolicyCategory[]

    @@map("clients")
}

model PolicyCategory {
    id        Int    @id @default(autoincrement())
    name      String
    client_id Int
    client    Client @relation(fields: [client_id], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    Policy    Policy[]

    @@map("policy_categories")
}

model Policy {
    id          Int            @id @default(autoincrement())
    name        String
    category_id Int
    category    PolicyCategory @relation(fields: [category_id], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@map("policies")
}

model User {
    id                      Int       @id @default(autoincrement())
    callcenter_id           Int?
    sid                     String?
    name                    String
    email                   String
    email_verified_at       DateTime?
    avatar                  String?
    password                String?
    admin                   Boolean   @default(false)
    external_agent          Boolean   @default(false)
    skills                  String?
    timezone                String?
    block_reject            Boolean   @default(true)
    presence                String?
    reservation_passthrough String?
    remember_token          String?
    createdAt               DateTime  @default(now())
    updatedAt               DateTime  @default(now())
    deletedAt               DateTime?

    @@map("users")
}

model Item {
    id Int @id @default(autoincrement())

    client_id              Int
    internal_name          String
    external_name          String
    self_init              Boolean   @default(false)
    channel_name           String
    channel_id             String
    self_init_workflow     String?
    workflow_id            String
    workflow_name          String?
    template               String
    icon_class             String?
    background_color       String?
    notification_tone      String?
    priority               Int?
    exclude                Boolean?
    timeout                Int?
    auto_dial              Boolean   @default(true)
    passthrough_url        String?
    pending_warning_limit  Int?
    pending_danger_limit   Int?
    accepted_warning_limit Int?
    accepted_danger_limit  Int?
    wrapup_time            Int?
    createdBy              String?
    createdAt              DateTime  @default(now())
    updatedAt              DateTime  @default(now())
    deletedAt              DateTime?

    @@map("items")
}

model Contact {
    id Int @id @default(autoincrement())

    number String
    notes  String?

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@map("contacts")
}
